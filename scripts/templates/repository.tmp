from pymongo.collection import ObjectId, Collection
from domain.models import <#feature_name#>DomainModel


class <#feature_name#>Repository:
    collection: Collection

    def __init__(self, collection: Collection):
        self.collection = collection

    def insert(self, model: <#feature_name#>DomainModel):
        result = self.collection.insert_one(model.to_dict())
        return str(result.inserted_id)

    def find_record_by_id(self, object_id: str):
        record = self.collection.find_one({"_id": ObjectId(object_id)})

        if record is None:
            return None

        model = self.make_object_from_dict(record)
        return model

    def remove_all_record_by_id(self, object_id: str):
        return self.collection.delete_many({"_id": ObjectId(object_id)})

    def update_record(self, model: <#feature_name#>DomainModel):

        filter_query = {"_id": ObjectId(model.object_id)}
        update_model = model.to_dict()
        del update_model["_id"]
        update_query = {"$set": update_model}
        return self.collection.update_one(filter_query, update_query, upsert=True)

    def make_object_from_dict(self, record: dict) -> <#feature_name#>DomainModel:
        object_id: ObjectId = record.get("_id")
        model = <#feature_name#>DomainModel() \
            .set_id(str(object_id)) \
            .set_creation_date(record.get("creation_date"))
        return model

